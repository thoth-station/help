{
    "componentChunkName": "component---src-templates-mdx-js",
    "path": "/community/core/docs/adr/0003-decommision-qeb-hwt.md",
    "result": {"data":{"site":{"siteMetadata":{"title":"Thoth Station Help"}},"mdx":{"id":"8d57381c-2857-5e47-a9a0-f08c18383e59","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Decommission Qeb-Hwt GitHub App\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Status: proposed\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Deciders: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/orgs/thoth-station/teams/devs\"\n  }, \"https://github.com/orgs/thoth-station/teams/devs\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Date: 2021-05-04\")), mdx(\"p\", null, \"Technical Story: Decommision Qeb-Hwt GitHub App\"), mdx(\"h2\", null, \"Context and Problem Statement\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/marketplace/qeb-hwt\"\n  }, \"Qeb-Hwt\"), \" is a GitHub Application which adds \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"thamos advise\"), \" based output to\\nPull Requests as a check. This functionality could be integrated into \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/marketplace/khebhut\"\n  }, \"https://github.com/marketplace/khebhut\"), \" and\\ncomplexity and maintain costs.\"), mdx(\"h2\", null, \"Decision Drivers \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"cost of maintaining Qeb-Hwt code and app\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"redundancy of infrastructure\")), mdx(\"h2\", null, \"Considered Options\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"keep and maintain Qeb-Hwt\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"merge function into Khebhut\")), mdx(\"h2\", null, \"Decision Outcome\"), mdx(\"p\", null, \"Chosen option: \\u201Cmerge function into Khebhut\\u201D, because we can reduce the cost of maintaining our software infrastructure\\nby reducing redundancy.\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"srcLink":"https://github.com/thoth-station/core/blob/master/docs/adr/0003-decommision-qeb-hwt.md"},"frontmatter":{"title":"","description":null}}},"pageContext":{"id":"8d57381c-2857-5e47-a9a0-f08c18383e59"}},
    "staticQueryHashes": ["1276261476","2902925331","3000541721","489485899"]}