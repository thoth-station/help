{
    "componentChunkName": "component---src-templates-mdx-js",
    "path": "/community/core/docs/adr/0001-use-gpl3-as-license.md",
    "result": {"data":{"site":{"siteMetadata":{"title":"Thoth Station Help"}},"mdx":{"id":"f2ede2db-593c-5f05-99f6-add0a1f3369d","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Use GNU GPL as license\"), mdx(\"p\", null, \"Everything needs to be licensed, otherwise the default copyright laws apply.\\nFor instance, in Germany that means users may not alter anything without explicitly asking for permission.\\nFor more information see \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://help.github.com/articles/licensing-a-repository/\"\n  }, \"https://help.github.com/articles/licensing-a-repository/\"), \".\"), mdx(\"p\", null, \"We want to have all source code related to Project Thoth to be used without any hassle and as free as possible, so that\\nusers can just \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://fsfe.org/freesoftware/freesoftware.en.html\"\n  }, \"execute and enjoy the four freedoms\"), \".\"), mdx(\"h2\", null, \"Considered Options\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"No license\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://creativecommons.org/share-your-work/public-domain/cc0/\"\n  }, \"CC0\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://www.gnu.org/licenses/gpl-3.0.en.html\"\n  }, \"GNU GPL\"))), mdx(\"h2\", null, \"Decision Outcome\"), mdx(\"p\", null, \"Chosen option: \\u201CGNU GPL\\u201D, because this license supports a strong copyleft model.\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"srcLink":"https://github.com/thoth-station/core/blob/master/docs/adr/0001-use-gpl3-as-license.md"},"frontmatter":{"title":"","description":null}}},"pageContext":{"id":"f2ede2db-593c-5f05-99f6-add0a1f3369d"}},
    "staticQueryHashes": ["1276261476","2902925331","3000541721","489485899"]}