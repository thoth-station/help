{
    "componentChunkName": "component---src-templates-mdx-js",
    "path": "/community/core/community/README.md",
    "result": {"data":{"site":{"siteMetadata":{"title":"Thoth Station Help"}},"mdx":{"id":"341cbb27-6e96-5523-957f-0f31d6f63f56","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Repository configuration\"), mdx(\"p\", null, \"The \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"./github-config.yaml\"\n  }, \"github-config.yaml\"), \" file contains the details of the\\nGitHub configuration for our organization.\"), mdx(\"p\", null, \"This file is used by\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/kubernetes/test-infra/tree/master/prow/cmd/peribolos\"\n  }, \"Peribolos\"), \"\\nto apply the configuration to the various repositories. Check the Peribolos\\ndocumentation for more details.\"), mdx(\"h2\", null, \"Updating SIG information\"), mdx(\"p\", null, \"Information about SIGs is sourced from the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"./sigs.yaml\"\n  }, \"sigs.yaml\"), \" file.\"), mdx(\"p\", null, \"To generate all the SIG documentation and update the OWNERS files from the\\nsource file, use the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"generate-sig-files\"), \" target (which is the default target) in the\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"./Makefile\"\n  }, \"Makefile\"), \", e.g.:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"make\"))), mdx(\"p\", null, \"(\", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"genenerate\"), \" is the default target).\"), mdx(\"p\", null, \"This uses the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/kubernetes/community/tree/master/generator\"\n  }, \"generator app\"), \" from the\\nKubernetes community.\"), mdx(\"h2\", null, \"Updating labels.md\"), mdx(\"p\", null, \"The \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"./labels.md\"\n  }, \"labels.md\"), \" file that documents the available labels is\\ngenerated from the source \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"./labels.yaml\"\n  }, \"labels.yaml\"), \" file that is used by prow to\\nmaintain the labels on the repos.\"), mdx(\"p\", null, \"To update the document after a change in the source, use the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/kubernetes/test-infra/tree/master/label_sync\"\n  }, \"label_sync\"), \" application\\nwith the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"docs\"), \" action. An containerized version invocation is included in the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"./Makefile\"\n  }, \"Makefile\"), \":\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"make generate-dockerized\"))));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"srcLink":"https://github.com/thoth-station/core/blob/master/community/README.md"},"frontmatter":{"title":"","description":null}}},"pageContext":{"id":"341cbb27-6e96-5523-957f-0f31d6f63f56"}},
    "staticQueryHashes": ["1276261476","2902925331","3000541721","489485899"]}